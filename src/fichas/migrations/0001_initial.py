# Generated by Django 5.2.1 on 2025-07-07 08:32

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Armaduras",
            fields=[
                ("id_armadura", models.AutoField(primary_key=True, serialize=False)),
                ("nome", models.CharField(max_length=70)),
                ("ca", models.IntegerField()),
                ("tipo", models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name="Armas",
            fields=[
                ("id_armas", models.AutoField(primary_key=True, serialize=False)),
                ("nome", models.CharField(max_length=70)),
                ("dano", models.CharField(max_length=7)),
                ("tipoDano", models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name="Magias",
            fields=[
                ("id_magias", models.AutoField(primary_key=True, serialize=False)),
                ("nome", models.CharField(max_length=100)),
                ("alcance", models.FloatField()),
                ("duracao", models.CharField(max_length=60)),
                ("tempoConju", models.CharField(max_length=60)),
                ("componentes", models.CharField(max_length=40)),
                (
                    "descricao",
                    models.TextField(blank=True, default="", max_length=500, null=True),
                ),
                ("nivel", models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Ficha",
            fields=[
                ("id_ficha", models.AutoField(primary_key=True, serialize=False)),
                ("forc", models.IntegerField()),
                ("dest", models.IntegerField()),
                ("consti", models.IntegerField()),
                ("inte", models.IntegerField()),
                ("sab", models.IntegerField()),
                ("car", models.IntegerField()),
                ("forcMod", models.IntegerField()),
                ("destMod", models.IntegerField()),
                ("constiMod", models.IntegerField()),
                ("inteMod", models.IntegerField()),
                ("sabMod", models.IntegerField()),
                ("carMod", models.IntegerField()),
                ("bonusProef", models.IntegerField()),
                ("inspira", models.IntegerField()),
                ("sabPassiva", models.IntegerField()),
                ("nomePerso", models.CharField(max_length=100)),
                ("antecendente", models.CharField(max_length=70)),
                ("exp", models.IntegerField()),
                ("nivel", models.IntegerField()),
                ("classe", models.CharField(max_length=70)),
                ("alinhamento", models.CharField(max_length=70)),
                ("raca", models.CharField(max_length=70)),
                (
                    "idiomas_Proeficiencias",
                    models.TextField(blank=True, default="", max_length=500, null=True),
                ),
                ("iniciativa", models.IntegerField()),
                ("qtd_DadosVida", models.IntegerField()),
                (
                    "ideais",
                    models.TextField(blank=True, default="", max_length=500, null=True),
                ),
                (
                    "vinculos",
                    models.TextField(blank=True, default="", max_length=500, null=True),
                ),
                (
                    "tracosPerso",
                    models.TextField(blank=True, default="", max_length=500, null=True),
                ),
                (
                    "fraquezas",
                    models.TextField(blank=True, default="", max_length=500, null=True),
                ),
                (
                    "caractHabilidades",
                    models.TextField(blank=True, default="", max_length=500, null=True),
                ),
                ("pvTotais", models.IntegerField()),
                ("dadoVida", models.CharField(max_length=7)),
                ("deslocamento", models.FloatField()),
                ("pCobre", models.IntegerField()),
                ("pPrata", models.IntegerField()),
                ("pOuro", models.IntegerField()),
                ("pEletro", models.IntegerField()),
                ("pPlatina", models.IntegerField()),
                (
                    "descAtaque",
                    models.TextField(blank=True, default="", max_length=500, null=True),
                ),
                (
                    "descEquip",
                    models.TextField(blank=True, default="", max_length=500, null=True),
                ),
                ("olhos", models.CharField(max_length=50)),
                ("cabelos", models.CharField(max_length=50)),
                ("idade", models.IntegerField()),
                ("altura", models.FloatField()),
                ("peso", models.FloatField()),
                ("pele", models.CharField(max_length=50)),
                (
                    "aparencia",
                    models.TextField(blank=True, default="", max_length=500, null=True),
                ),
                (
                    "aliadosOrg",
                    models.TextField(blank=True, default="", max_length=500, null=True),
                ),
                (
                    "outrasCaract",
                    models.TextField(blank=True, default="", max_length=500, null=True),
                ),
                (
                    "historia",
                    models.TextField(blank=True, default="", max_length=500, null=True),
                ),
                (
                    "tesouro",
                    models.TextField(blank=True, default="", max_length=500, null=True),
                ),
                ("publica", models.BooleanField(default=False)),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CaArmadura",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("caMod", models.IntegerField()),
                (
                    "armadura",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fichas.armaduras",
                    ),
                ),
                (
                    "ficha",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fichas.ficha",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Ataque",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bonus", models.IntegerField()),
                (
                    "arma",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="fichas.armas"
                    ),
                ),
                (
                    "ficha",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fichas.ficha",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="usuario",
            name="fichas",
            field=models.ManyToManyField(
                blank=True, default=None, related_name="lista", to="fichas.ficha"
            ),
        ),
        migrations.CreateModel(
            name="ListaMagia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("habiChave", models.CharField(max_length=70)),
                ("cdTR", models.IntegerField()),
                ("bonusAtq", models.IntegerField()),
                ("classeConju", models.CharField(max_length=100)),
                ("slot", models.CharField(max_length=30)),
                (
                    "ficha",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fichas.ficha",
                    ),
                ),
                (
                    "magia",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="fichas.magias"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Pericias",
            fields=[
                ("id_pericias", models.AutoField(primary_key=True, serialize=False)),
                ("valor", models.IntegerField(default=2)),
                ("nome", models.CharField(max_length=40)),
                (
                    "ficha",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="fichas.ficha",
                    ),
                ),
            ],
        ),
    ]
